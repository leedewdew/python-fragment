---------------------------------------------
1. Arrays
    1.1 rank
        The number of dimensions is the rank of the array.
    1.2 shape
        the shape of an array is a tuple of integers giving the size of the array along each dimension.
    1.3 acces array
        We can initialize numpy arrays from nested Python lists, and access elements using square brackets
------------------------
---------------------------------------------
2. create array
    a = np.zeros((2,2)) # a = np.zeros([2,2]) both ok
    b = np.ones((1,2)) # b = np.ones([1,2]) both ok
    c = np.full((2,2), 7) # fill 2x2 array with element 7
    d = np.eye(2) #
    e = np.random.random((2,2))
------------------------
---------------------------------------------
3. Array indexing -- Slicing
    3.1 # Create the following rank 2 array with shape (3, 4)
    # [[ 1  2  3  4]
    #  [ 5  6  7  8]
    #  [ 9 10 11 12]]
    a = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]])
    
    # Use slicing to pull out the subarray consisting of the first 2 rows
    # and columns 1 and 2; b is the following array of shape (2, 2):
    # [[2 3]
    #  [6 7]]
    b = a[:2, 1:3]
    
    # A slice of an array is a view into the same data, so modifying it
    # will modify the original array.
    print(a[0, 1])   # Prints "2"
    b[0, 0] = 77     # b[0, 0] is the same piece of data as a[0, 1]
    print(a[0, 1])   # Prints "77"
------------------------
---------------------------------------------
4. Array indexing -- Slice and Integer
    4.1 mix integer indexing with slice indexing
        # Create the following rank 2 array with shape (3, 4)
        a = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]])
        
        # Mixing integer indexing with slices yields an array of lower rank,
        # while using only slices yields an array of the same rank as the
        # original array:
        row_r1 = a[1, :]    # Rank 1 view of the second row of a
        row_r2 = a[1:2, :]  # Rank 2 view of the second row of a
        print(row_r1, row_r1.shape)  # Prints "[5 6 7 8] (4,)"
        print(row_r2, row_r2.shape)  # Prints "[[5 6 7 8]] (1, 4)"
        
        # We can make the same distinction when accessing columns of an array:
        col_r1 = a[:, 1]
        col_r2 = a[:, 1:2]
        print(col_r1, col_r1.shape)  # Prints "[ 2  6 10] (3,)"
        print(col_r2, col_r2.shape)  # Prints "[[ 2]
                                     #          [ 6]
                                     #          [10]] (3, 1)"
------------------------
---------------------------------------------
5. Integer array indexing
    When you index into numpy arrays using slicing, the resulting array view will always be a subarray of the original array. In contrast, integer array indexing allows you to construct arbitrary arrays using the data from another array. Here is an example:
    5.1
        a = np.array([[1,2], [3, 4], [5, 6]])

        # An example of integer array indexing.
        # The returned array will have shape (3,) and
        print(a[[0, 1, 2], [0, 1, 0]])  # Prints "[1 4 5]"
        
            Equivalent to
        
        print(np.array([a[0, 0], a[1, 1], a[2, 0]]))  # Prints "[1 4 5]"
    5.2 
        # When using integer array indexing, you can reuse the same
        # element from the source array:
        print(a[[0, 0], [1, 1]])  # Prints "[2 2]"
        
            Equivalent to 
            
        print(np.array([a[0, 1], a[0, 1]]))  # Prints "[2 2]"
    5.3 可以取出或者改变每一行的任何元素
        # 取出
        a = np.array([[1,2,3], [4,5,6], [7,8,9], [10, 11, 12]])
        b = np.array([0, 2, 0, 1])
        print(a[np.arange(4), b]) #等价于a[[0 1 2 3],[0 2 0 1]]，即5.1中提到的
        # 修改
        a[np.arange(4), b] += 10
------------------------
---------------------------------------------
6. Boolean array indexing
    Boolean array indexing lets you pick out arbitrary elements of an array. Frequently this type of indexing is used to select the elements of an array that satisfy some condition.
    6.1 
        # Here goes code
        a = np.array([[1,2], [3, 4], [5, 6]])
        bool_idx = (a > 2)   # Find the elements of a that are bigger than 2;
                             # this returns a numpy array of Booleans of the same
                             # shape as a, where each slot of bool_idx tells
                             # whether that element of a is > 2.
        print(bool_idx)      # Prints "[[False False]
                             #          [ True  True]
                             #          [ True  True]]"
        # We use boolean array indexing to construct a rank 1 array
        # consisting of the elements of a corresponding to the True values
        # of bool_idx
        print(a[bool_idx])  # Prints "[3 4 5 6]"
    6.2 # We can do all of the above in a single concise statement:
        print(a[a > 2])     # Prints "[3 4 5 6]"
------------------------
---------------------------------------------
7. Datatypes
    Every numpy array is a grid of elements of the same type. Numpy provides a large set of numeric datatypes that you can use to construct arrays. Numpy tries to guess a datatype when you create an array, but functions that construct arrays usually also include an optional argument to explicitly specify the datatype.
    
    # Here goes code
    x = np.array([1, 2])   # Let numpy choose the datatype
    print(x.dtype)         # Prints "int64" or "int32"
    
    x = np.array([1.0, 2.0])   # Let numpy choose the datatype
    print(x.dtype)             # Prints "float64"
    
    x = np.array([1, 2], dtype=np.int64)   # Force a particular datatype
    print(x.dtype)                         # Prints "int64"
------------------------
---------------------------------------------
8. Array math - add/sub/mul/div
    Basic mathematical functions operate elementwise on arrays, and are available both as operator overloads and as functions in the numpy module.
    # Here goes code
    x = np.array([[1,2],[3,4]], dtype=np.float64)
    y = np.array([[5,6],[7,8]], dtype=np.float64)
    
    # add
    # print x+y
    # print np.add(x,y)
    # print x.__add__(y)
    
    #subtract
    # print x-y
    # print np.subtract(x,y)
    # print x.__sub__(y)
    
    # multiply
    # print x*y
    # print np.multiply(x,y)
    # print x.__mul__(y)
    
    # divide
    print x/y
    print np.divide(x,y)
    print x.__div__(y)
    
    # sqrt
    print np.sqrt(x)
------------------------
---------------------------------------------
9. Array math - inner products: dot
    Note that unlike MATLAB, * is elementwise multiplication, not matrix multiplication. We instead use the dot function to compute inner products of vectors, to multiply a vector by a matrix, and to multiply matrices. dot is available both as a function in the numpy module and as an instance method of array objects:
    # Here goes code    
    # matrices
    x = np.array([[1,2],[3,4]])
    y = np.array([[5,6],[7,8]])
    # vector
    v = np.array([9,10])
    w = np.array([11, 12])
    
    # Inner product of vectors; both produce 219
    print(v.dot(w))
    print(np.dot(v, w))
    
    # Matrix / vector product; both produce the rank 1 array [29 67]
    print(x.dot(v))
    print(np.dot(x, v))
    
    # vector / Matrices product; both produce the rank 1 array [39 58]
    print v.dot(x)
    print np.dot(v,x)
    Note: Like matrices product, but result is rank 1
    
    # Matrix / matrix product; both produce the rank 2 array
    # [[19 22]
    #  [43 50]]
    print(x.dot(y))
    print(np.dot(x, y))
    Note: x.dot(y) is different with y.dot(x)
------------------------
---------------------------------------------
10. axis
    10.1 
        data = np.array([[1,2,1],[0,3,1],[2,1,4],[1,3,1]])
        # 这个数组代表了样本数据的特征，其中每一行代表一个样本的三个特征，每一列是不同样本的特征。如果在分析样本的过程中需要对每个样本的三个特征求和，该如何处理?
        np.sum(data, axis=1)
        -->array([4, 4, 7, 5])
        # 那如果想求每种特征的最小值，该如何处理
        np.min(data, axis=0)
        -->array([0, 1, 1])
        # 又如果想得知所有样本所有特征的平均值呢
        np.average(data)
        注：由此可以看出，通过不同的axis，numpy会沿着不同的方向进行操作：如果不设置，那么对所有的元素操作；如果axis=0，则沿着纵轴进行操作；axis=1，则沿着横轴进行操作。但这只是简单的二位数组，如果是多维的呢？可以总结为一句话：设axis=i，则numpy沿着第i个下标变化的放下进行操作。例如刚刚的例子，可以将表示为：data =[[a00, a01],[a10,a11]]，所以axis=0时，沿着第0个下标变化的方向进行操作，也就是a00->a10, a01->a11，也就是纵坐标的方向，axis=1时也类似。
    ------------------------
---------------------------------------------
11. transpose a matrix : T
    
    # Note that taking the transpose of a rank 1 array does nothing:
    v = np.array([1,2,3])
    print(v)    # Prints "[1 2 3]"
    print(v.T)  # Prints "[1 2 3]"
------------------------
---------------------------------------------
12. Broadcasting
    Broadcasting is a powerful mechanism that allows numpy to work with arrays of different shapes when performing arithmetic operations. Frequently we have a smaller array and a larger array, and we want to use the smaller array multiple times to perform some operation on the larger array.
    12.1 create new matrix with same shape as other matrix
        x = np.array([[1,2,3], [4,5,6], [7,8,9], [10, 11, 12]])
        y = np.empty_like(x)   # Create an empty matrix with the same shape as x
    12.2 how to stack vector
        v = np.array([1, 0, 1])
        vv = np.tile(v, (4, 1))   # Stack 4 copies of v on top of each other
    12.3 broadcast rules
        Broadcasting two arrays together follows these rules:

        1. If the arrays do not have the same rank, prepend the shape of the lower rank array with 1s until both shapes have the same length.
        2. The two arrays are said to be compatible in a dimension if they have the same size in the dimension, or if one of the arrays has size 1 in that dimension.
        3. The arrays can be broadcast together if they are compatible in all dimensions.
        4. After broadcasting, each array behaves as if it had shape equal to the elementwise maximum of shapes of the two input arrays.
        5. In any dimension where one array had size 1 and the other array had size greater than 1, the first array behaves as if it were copied along that dimension
    12.4 compute an outer product
        v = np.array([1,2,3])  # v has shape (3,)
        w = np.array([4,5])    # w has shape (2,)
        print np.reshape(v,(3,1)) * w
        OR
        print v.reshape(3,1) * w
        # [[ 4  5]
        #  [ 8 10]
        #  [12 15]]
    12.5 
        # Add a vector to each column of a matrix
        # x has shape (2, 3) and w has shape (2,).
        # If we transpose x then it has shape (3, 2) and can be broadcast
        # against w to yield a result of shape (3, 2); transposing this result
        # yields the final result of shape (2, 3) which is the matrix x with
        # the vector w added to each column. Gives the following matrix:
        # [[ 5  6  7]
        #  [ 9 10 11]]
        print((x.T + w).T)
        
            Equivalent to 
        
        print x+w.reshape(-1,1)
    12.6 
        # Multiply a matrix by a constant:
        # x has shape (2, 3). Numpy treats scalars as arrays of shape ();
        # these can be broadcast together to shape (2, 3), producing the
        # following array:
        # [[ 2  4  6]
        #  [ 8 10 12]]
        print(x * 2)
------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
---------------------------------------------

------------------------
